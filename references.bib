@inproceedings{Meyer1990,
  author = {Meyer, Bertrand},
  title = {Sequential and Concurrent Object-Oriented Programming},
  booktitle = {Technology of Object-Oriented Languages and Systems: Proceedings},
  series = {TOOLS 2},
  year = {1990},
  isbn = {978-2-87892-000-0},
  location = {Orlando, FL, USA},
  pages = {17--28},
  numpages = {11},
  publisher = {Angkor/SOL},
  address = {Paris, France},
  note = {Foundational material: Early examination of modeling concurrent programming in an object-oriented way.},
}

@book{Kiczales1991,
 author = {Kiczales, Gregor and Rivieres, Jim Des},
 title = {The Art of the Metaobject Protocol},
 year = {1991},
 isbn = {0262111586},
 publisher = {MIT Press},
 address = {Cambridge, MA, USA},
 note = {Background material: Introduces metaobject protocols as an approach to language design.},
}

@inproceedings{Marr2009,
  author = {Marr, Stefan and Haupt, Michael and D'Hondt, Theo},
  title = {Intermediate Language Design of High-level Language Virtual Machines: Towards Comprehensive Concurrency Support},
  booktitle = {Proceedings of the Third Workshop on Virtual Machines and Intermediate Languages},
  series = {VMIL '09},
  year = {2009},
  isbn = {978-1-60558-874-2},
  location = {Orlando, FL, USA},
  pages = {3:1--3:2},
  articleno = {3},
  numpages = {2},
  url = {http://doi.acm.org/10.1145/1711506.1711509},
  doi = {10.1145/1711506.1711509},
  acmid = {1711509},
  publisher = {ACM},
  address = {New York, NY, USA},
  keywords = {bytecode, concurrency, design, instruction set, intermediate language, survey, virtual machines},
  note = {Short but helpful: Investigates concurrency support in common virtual machines (CLI, Dis VM, Erlang, JVM, Mozart/Oz) and finds it limited. Seems to serve primarily as a guide for Marr's later research.},
}

@inproceedings{Cederman2010,
  author = {Cederman, Daniel and Tsigas, Philippas},
  title = {Supporting Lock-free Composition of Concurrent Data Objects},
  booktitle = {Proceedings of the 7th ACM International Conference on Computing Frontiers},
  series = {CF '10},
  year = {2010},
  isbn = {978-1-4503-0044-5},
  location = {Bertinoro, Italy},
  pages = {53--62},
  numpages = {10},
  url = {http://doi.acm.org/10.1145/1787275.1787286},
  doi = {10.1145/1787275.1787286},
  acmid = {1787286},
  publisher = {ACM},
  address = {New York, NY, USA},
  keywords = {composition, data structures, lock-free},
  note = {Supporting material: Addresses challenges of lock-free data objects. Focuses heavily on decomposing and arranging lock-free operations to form new lock-free operations.},
}

@incollection{Morandi2010,
  author = {Morandi, Benjamin and Bauer, Sebastian S. and Meyer, Bertrand},
  title = {{SCOOP} -- a Contract-based Concurrent Object-oriented Programming Model},
  bookTitle = {Advanced Lectures on Software Engineering},
  editor = {M{\"u}ller, Peter},
  year = {2010},
  isbn = {3-642-13009-7, 978-3-642-13009-0},
  pages = {41--90},
  numpages = {50},
  url = {http://dl.acm.org/citation.cfm?id=2167938.2167941},
  acmid = {2167941},
  publisher = {Springer-Verlag},
  address = {Berlin, Heidelberg, Germany},
  note = {Thorough specification of a concurrency model; builds on Meyer's work: Discusses generalization of object-oriented concepts for use in concurrent contexts. Suggests a simpler alternative to semaphore-based concurrency models, but acknowledges its possible shortcomings (for instance, lack of asynchronous exception handling and possible deadlocking).},
}

@inproceedings{Shacham2011,
 author = {Shacham, Ohad and Bronson, Nathan and Aiken, Alex and Sagiv, Mooly and Vechev, Martin and Yahav, Eran},
 title = {Testing Atomicity of Composed Concurrent Operations},
 booktitle = {Proceedings of the 2011 ACM International Conference on Object Oriented Programming Systems Languages and Applications},
 series = {OOPSLA '11},
 year = {2011},
 isbn = {978-1-4503-0940-0},
 location = {Portland, Oregon, USA},
 pages = {51--64},
 numpages = {14},
 url = {http://doi.acm.org/10.1145/2048066.2048073},
 doi = {10.1145/2048066.2048073},
 acmid = {2048073},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {collections, composed operations, concurrency, linearizability, testing},
 note = {Useful and peer reviewed: Discusses the composition of atomic operations on concurrent data structures. Demonstrates an adversarial tool that verifies atomicity of composed concurrent collection operations.},
}

@inproceedings{Ziarek2011,
 author = {Ziarek, Lukasz and Sivaramakrishnan, KC and Jagannathan, Suresh},
 title = {Composable Asynchronous Events},
 booktitle = {Proceedings of the 32nd ACM SIGPLAN Conference on Programming Language Design and Implementation},
 series = {PLDI '11},
 year = {2011},
 isbn = {978-1-4503-0663-8},
 location = {San Jose, California, USA},
 pages = {628--639},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/1993498.1993572},
 doi = {10.1145/1993498.1993572},
 acmid = {1993572},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {asynchrony, composability, concurrent ml, first-class events, message-passing},
 note = {Useful and peer reviewed: Suggests an asynchronous event model that can handle a variety of different concurrency abstractions. Provides an implementation of a web server in ML and analyzes performance.},
}

@incollection{Marr2012,
  author = {Marr, Stefan and D'Hondt, Theo},
  title = {Identifying a Unifying Mechanism for the Implementation of Concurrency Abstractions on Multi-language Virtual Machines},
  bookTitle = {Objects, Models, Components, Patterns: 50th International Conference, TOOLS 2012, Prague, Czech Republic, May 29-31, 2012. Proceedings},
  editor = {Furia, Carlo A. and Nanz, Sebastian},
  year = {2012},
  publisher = {Springer-Verlag},
  address = {Berlin, Heidelberg, Germany},
  pages = {171--186},
  isbn = {978-3-642-30561-0},
  doi = {10.1007/978-3-642-30561-0_13},
  url = {http://dx.doi.org/10.1007/978-3-642-30561-0_13},
  note = {Useful and peer reviewed: Advocates for domain-specific concurrenct abstractions rather than looking for some ``silver bullet,'' but seeks to find some commonalities that would allow virtual machines to provide some intrinsic support. Conducts a thorough survey of parallel/concurrent constructs and finds that concurrency constructs (moreso than parallel constructs) benefit from VM support. Suggests a meta-object protocol that can support a variety of abstractions.},
}

@inproceedings{Golan-Gueta2013,
 author = {Golan-Gueta, Guy and Ramalingam, G. and Sagiv, Mooly and Yahav, Eran},
 title = {Concurrent Libraries with Foresight},
 booktitle = {Proceedings of the 34th ACM SIGPLAN Conference on Programming Language Design and Implementation},
 series = {PLDI '13},
 year = {2013},
 isbn = {978-1-4503-2014-6},
 location = {Seattle, Washington, USA},
 pages = {263--274},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/2491956.2462172},
 doi = {10.1145/2491956.2462172},
 acmid = {2462172},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {automatic synchronization, composition, concurrency, data structures, transactions},
 note = {Useful and peer reviewed: Addresses problems of extending concurrency libraries to perform sequences of operations. Suggests providing a library with ``foresight'' that could ensure atomicity for composite operations. Demonstrates how to infer such foresight automatically. Applies the concept to a Java Map and experimentally evaluates the results. Discusses some useful related work, especially in taking advantage of the semantic properties of concurrent operations (for instance, that read-only operations are commutative).},
}

@inproceedings{Marr2015,
 author = {Marr, Stefan and Seaton, Chris and Ducasse, St{\'e}phane},
 title = {Zero-overhead Metaprogramming: Reflection and Metaobject Protocols Fast and Without Compromises},
 booktitle = {Proceedings of the 36th ACM SIGPLAN Conference on Programming Language Design and Implementation},
 series = {PLDI '15},
 year = {2015},
 isbn = {978-1-4503-3468-6},
 location = {Portland, OR, USA},
 pages = {545--554},
 numpages = {10},
 url = {http://doi.acm.org/10.1145/2737924.2737963},
 doi = {10.1145/2737924.2737963},
 acmid = {2737963},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Just-in-Time Compilation, Meta-tracing, Metaobject Protocols, Metaprogramming, Partial Evaluation, Proxies, Reflection, Virtual Machines},
 note = {Heavier explanation of metaprogramming concepts; peer reviewed: Primarily demonstrates that it's possible to remove runtime overhead from metaprogramming. Helpfully explains metaobject protocols (facilities to change a language's behavior) and metaprogramming as of 2015 (reflection, performance considerations, self-optimizing interpreters). Presents dispatch chains as a solution to metaprogramming overhead and demonstrates improvements in actual languages. Provides a substantial amount of related work.},
}

@inproceedings{Ziv2015,
 author = {Ziv, Ofri and Aiken, Alex and Golan-Gueta, Guy and Ramalingam, G. and Sagiv, Mooly},
 title = {Composing Concurrency Control},
 booktitle = {Proceedings of the 36th ACM SIGPLAN Conference on Programming Language Design and Implementation},
 series = {PLDI '15},
 year = {2015},
 isbn = {978-1-4503-3468-6},
 location = {Portland, OR, USA},
 pages = {240--249},
 numpages = {10},
 url = {http://doi.acm.org/10.1145/2737924.2737970},
 doi = {10.1145/2737924.2737970},
 acmid = {2737970},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {composable concurrency},
 note = {Useful and peer reviewed: Formalizes desired requirements for a concurrency model (deadlock and abort safety, opacity) and demonstrates protocols that satisfy the requirements and can be combined. Notably, applies this theory of correctness to validate the combination of optimistic and pessimistic concurrency control. Offers a rich selection of related work.},
}
