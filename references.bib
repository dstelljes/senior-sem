@article{Liu1973,
  author = {Liu, C. L. and Layland, James W.},
  title = {Scheduling Algorithms for Multiprogramming in a Hard-Real-Time Environment},
  journal = {Journal of the ACM},
  issue_date = {Jan. 1973},
  volume = {20},
  number = {1},
  month = {Jan},
  year = {1973},
  issn = {0004-5411},
  pages = {46--61},
  numpages = {16},
  url = {http://doi.acm.org/10.1145/321738.321743},
  doi = {10.1145/321738.321743},
  acmid = {321743},
  publisher = {ACM},
  address = {New York, NY, USA},
}

@article{Lamport1977,
  author = {Lamport, Leslie},
  title = {Proving the Correctness of Multiprocess Programs},
  journal = {IEEE Transactions on Software Engineering},
  issue_date = {March 1977},
  volume = {3},
  number = {2},
  month = {Mar},
  year = {1977},
  issn = {0098-5589},
  pages = {125--143},
  numpages = {19},
  url = {http://dx.doi.org/10.1109/TSE.1977.229904},
  doi = {10.1109/TSE.1977.229904},
  acmid = {1313439},
  publisher = {IEEE Press},
  address = {Piscataway, NJ, USA},
  keywords = {assertions, concurrent programming, correctness, multiprocessing, synchronization},
}

@article{Hoare1978,
  author = {Hoare, C. A. R.},
  title = {Communicating Sequential Processes},
  journal = {Communications of the ACM},
  issue_date = {Aug. 1978},
  volume = {21},
  number = {8},
  month = {Aug},
  year = {1978},
  issn = {0001-0782},
  pages = {666--677},
  numpages = {12},
  url = {http://doi.acm.org/10.1145/359576.359585},
  doi = {10.1145/359576.359585},
  acmid = {359585},
  publisher = {ACM},
  address = {New York, NY, USA},
  keywords = {classes, concurrency, conditional critical regions, coroutines, data representations, guarded commands, input, iterative arrays, monitors, multiple entries, multiple exits, nondeterminacy, output, parallel programming, procedures, program structures, programming, programming languages, programming primitives, recursion},
}

@article{Lamport1978,
  author = {Lamport, Leslie},
  title = {Time, Clocks, and the Ordering of Events in a Distributed System},
  journal = {Communications of the ACM},
  issue_date = {July 1978},
  volume = {21},
  number = {7},
  month = {Jul},
  year = {1978},
  issn = {0001-0782},
  pages = {558--565},
  numpages = {8},
  url = {http://doi.acm.org/10.1145/359545.359563},
  doi = {10.1145/359545.359563},
  acmid = {359563},
  publisher = {ACM},
  address = {New York, NY, USA},
  keywords = {clock synchronization, computer networks, distributed systems, multiprocess systems},
}

@article{Haerder1983,
  author = {Haerder, Theo and Reuter, Andreas},
  title = {Principles of Transaction-oriented Database Recovery},
  journal = {ACM Computing Surveys},
  issue_date = {December 1983},
  volume = {15},
  number = {4},
  month = {Dec},
  year = {1983},
  issn = {0360-0300},
  pages = {287--317},
  numpages = {31},
  url = {http://doi.acm.org/10.1145/289.291},
  doi = {10.1145/289.291},
  acmid = {291},
  publisher = {ACM},
  address = {New York, NY, USA},
}

@book{Agha1986,
  author = {Agha, Gul},
  title = {Actors: A Model of Concurrent Computation in Distributed Systems},
  year = {1986},
  isbn = {0-262-01092-5},
  publisher = {MIT Press},
  address = {Cambridge, MA, USA},
}

@article{Herlihy1990,
  author = {Herlihy, Maurice P. and Wing, Jeannette M.},
  title = {Linearizability: A Correctness Condition for Concurrent Objects},
  journal = {ACM Transactions on Programming Languages and Systems},
  issue_date = {July 1990},
  volume = {12},
  number = {3},
  month = {Jul},
  year = {1990},
  issn = {0164-0925},
  pages = {463--492},
  numpages = {30},
  url = {http://doi.acm.org/10.1145/78969.78972},
  doi = {10.1145/78969.78972},
  acmid = {78972},
  publisher = {ACM},
  address = {New York, NY, USA},
}

@inproceedings{Meyer1990,
  author = {Meyer, Bertrand},
  title = {Sequential and Concurrent Object-Oriented Programming},
  booktitle = {Technology of Object-Oriented Languages and Systems: Proceedings},
  series = {TOOLS 2},
  year = {1990},
  isbn = {978-2-87892-000-0},
  location = {Orlando, FL, USA},
  pages = {17--28},
  numpages = {11},
  publisher = {Angkor/SOL},
  address = {Paris, France},
  note = {Foundational material: Early examination of modeling concurrent programming in an object-oriented way.},
}

@inproceedings{Shavit1995,
  author = {Shavit, Nir and Touitou, Dan},
  title = {Software Transactional Memory},
  booktitle = {Proceedings of the Fourteenth Annual ACM Symposium on Principles of Distributed Computing},
  series = {PODC '95},
  year = {1995},
  isbn = {0-89791-710-3},
  location = {Ottowa, Ontario, Canada},
  pages = {204--213},
  numpages = {10},
  url = {http://doi.acm.org/10.1145/224964.224987},
  doi = {10.1145/224964.224987},
  acmid = {224987},
  publisher = {ACM},
  address = {New York, NY, USA},
}

@inproceedings{Harris2005,
  author = {Harris, Tim and Marlow, Simon and Peyton-Jones, Simon and Herlihy, Maurice},
  title = {Composable Memory Transactions},
  booktitle = {Proceedings of the Tenth ACM SIGPLAN Symposium on Principles and Practice of Parallel Programming},
  series = {PPoPP '05},
  year = {2005},
  isbn = {1-59593-080-9},
  location = {Chicago, IL, USA},
  pages = {48--60},
  numpages = {13},
  url = {http://doi.acm.org/10.1145/1065944.1065952},
  doi = {10.1145/1065944.1065952},
  acmid = {1065952},
  publisher = {ACM},
  address = {New York, NY, USA},
  keywords = {locks, non-blocking algorithms, transactions},
}

@inproceedings{Marr2009,
  author = {Marr, Stefan and Haupt, Michael and D'Hondt, Theo},
  title = {Intermediate Language Design of High-level Language Virtual Machines: Towards Comprehensive Concurrency Support},
  booktitle = {Proceedings of the Third Workshop on Virtual Machines and Intermediate Languages},
  series = {VMIL '09},
  year = {2009},
  isbn = {978-1-60558-874-2},
  location = {Orlando, FL, USA},
  pages = {3:1--3:2},
  articleno = {3},
  numpages = {2},
  url = {http://doi.acm.org/10.1145/1711506.1711509},
  doi = {10.1145/1711506.1711509},
  acmid = {1711509},
  publisher = {ACM},
  address = {New York, NY, USA},
  keywords = {bytecode, concurrency, design, instruction set, intermediate language, survey, virtual machines},
  note = {Short but helpful: Investigates concurrency support in common virtual machines (CLI, Dis VM, Erlang, JVM, Mozart/Oz) and finds it limited. Seems to serve primarily as a guide for Marr's later research.},
}

@inproceedings{Cederman2010,
  author = {Cederman, Daniel and Tsigas, Philippas},
  title = {Supporting Lock-free Composition of Concurrent Data Objects},
  booktitle = {Proceedings of the 7th ACM International Conference on Computing Frontiers},
  series = {CF '10},
  year = {2010},
  isbn = {978-1-4503-0044-5},
  location = {Bertinoro, Italy},
  pages = {53--62},
  numpages = {10},
  url = {http://doi.acm.org/10.1145/1787275.1787286},
  doi = {10.1145/1787275.1787286},
  acmid = {1787286},
  publisher = {ACM},
  address = {New York, NY, USA},
  keywords = {composition, data structures, lock-free},
  note = {Supporting material: Addresses challenges of lock-free data objects. Focuses heavily on decomposing and arranging lock-free operations to form new lock-free operations.},
}

@incollection{Morandi2010,
  author = {Morandi, Benjamin and Bauer, Sebastian S. and Meyer, Bertrand},
  title = {{SCOOP} -- a Contract-based Concurrent Object-oriented Programming Model},
  bookTitle = {Advanced Lectures on Software Engineering},
  editor = {M{\"u}ller, Peter},
  year = {2010},
  isbn = {3-642-13009-7, 978-3-642-13009-0},
  pages = {41--90},
  numpages = {50},
  url = {http://dl.acm.org/citation.cfm?id=2167938.2167941},
  acmid = {2167941},
  publisher = {Springer-Verlag},
  address = {Berlin, Heidelberg, Germany},
  note = {Thorough specification of a concurrency model; builds on Meyer's work: Discusses generalization of object-oriented concepts for use in concurrent contexts. Suggests a simpler alternative to semaphore-based concurrency models, but acknowledges its possible shortcomings (for instance, lack of asynchronous exception handling and possible deadlocking).},
}

@inproceedings{Shacham2011,
 author = {Shacham, Ohad and Bronson, Nathan and Aiken, Alex and Sagiv, Mooly and Vechev, Martin and Yahav, Eran},
 title = {Testing Atomicity of Composed Concurrent Operations},
 booktitle = {Proceedings of the 2011 ACM International Conference on Object Oriented Programming Systems Languages and Applications},
 series = {OOPSLA '11},
 year = {2011},
 isbn = {978-1-4503-0940-0},
 location = {Portland, Oregon, USA},
 pages = {51--64},
 numpages = {14},
 url = {http://doi.acm.org/10.1145/2048066.2048073},
 doi = {10.1145/2048066.2048073},
 acmid = {2048073},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {collections, composed operations, concurrency, linearizability, testing},
 note = {Useful and peer reviewed: Discusses the composition of atomic operations on concurrent data structures. Demonstrates an adversarial tool that verifies atomicity of composed concurrent collection operations.},
}

@inproceedings{Ziarek2011,
 author = {Ziarek, Lukasz and Sivaramakrishnan, KC and Jagannathan, Suresh},
 title = {Composable Asynchronous Events},
 booktitle = {Proceedings of the 32nd ACM SIGPLAN Conference on Programming Language Design and Implementation},
 series = {PLDI '11},
 year = {2011},
 isbn = {978-1-4503-0663-8},
 location = {San Jose, California, USA},
 pages = {628--639},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/1993498.1993572},
 doi = {10.1145/1993498.1993572},
 acmid = {1993572},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {asynchrony, composability, concurrent ml, first-class events, message-passing},
 note = {Useful and peer reviewed: Suggests an asynchronous event model that can handle a variety of different concurrency abstractions. Provides an implementation of a web server in ML and analyzes performance.},
}

@incollection{Marr2012,
  author = {Marr, Stefan and D'Hondt, Theo},
  title = {Identifying a Unifying Mechanism for the Implementation of Concurrency Abstractions on Multi-language Virtual Machines},
  bookTitle = {Objects, Models, Components, Patterns: 50th International Conference, TOOLS 2012, Prague, Czech Republic, May 29-31, 2012. Proceedings},
  editor = {Furia, Carlo A. and Nanz, Sebastian},
  year = {2012},
  publisher = {Springer-Verlag},
  address = {Berlin, Heidelberg, Germany},
  pages = {171--186},
  isbn = {978-3-642-30561-0},
  doi = {10.1007/978-3-642-30561-0_13},
  url = {http://dx.doi.org/10.1007/978-3-642-30561-0_13},
  note = {Useful and peer reviewed: Advocates for domain-specific concurrenct abstractions rather than looking for some ``silver bullet,'' but seeks to find some commonalities that would allow virtual machines to provide some intrinsic support. Conducts a thorough survey of parallel/concurrent constructs and finds that concurrency constructs (moreso than parallel constructs) benefit from VM support. Suggests a meta-object protocol that can support a variety of abstractions.},
}

@inproceedings{Kambona2013,
  author = {Kambona, Kennedy and Boix, Elisa Gonzalez and De Meuter, Wolfgang},
  title = {An Evaluation of Reactive Programming and Promises for Structuring Collaborative Web Applications},
  booktitle = {Proceedings of the 7th Workshop on Dynamic Languages and Applications},
  series = {DYLA '13},
  year = {2013},
  isbn = {978-1-4503-2041-2},
  location = {Montpellier, France},
  pages = {3:1--3:9},
  articleno = {3},
  numpages = {9},
  url = {http://doi.acm.org/10.1145/2489798.2489802},
  doi = {10.1145/2489798.2489802},
  acmid = {2489802},
  publisher = {ACM},
  address = {New York, NY, USA},
  keywords = {Javascript, behaviours, callbacks, event streams, futures, promises, reactive programming},
}

@article{Harris2014,
  author = {Harris, Tim and Fraser, Keir},
  title = {Language Support for Lightweight Transactions},
  journal = {SIGPLAN Not.},
  issue_date = {April 2014},
  volume = {49},
  number = {4},
  month = jul,
  year = {2014},
  issn = {0362-1340},
  pages = {64--78},
  numpages = {15},
  url = {http://doi.acm.org/10.1145/2641638.2641654},
  doi = {10.1145/2641638.2641654},
  acmid = {2641654},
  publisher = {ACM},
  address = {New York, NY, USA},
  keywords = {concurrency, conditional critical regions, nonblocking systems, transactions},
}

@inproceedings{Swalens2014,
  author = {Swalens, Janwillem and Marr, Stefan and De Koster, Joeri and Van Cutsem, Tom},
  title = {Towards Composable Concurrency Abstractions},
  booktitle = {Proceedings of the 7th Workshop on Programming Language Approaches to Concurrency and Communication-cEntric Software},
  series = {PLACES '14},
  year = {2014},
  issn = {2075-2180},
  location = {Grenoble, France},
  pages = {54--60},
  numpages = {7},
  url = {http://dx.doi.org/10.4204/EPTCS.155.8},
  doi = {10.4204/EPTCS.155.8},
  publisher = {EPTCS 155},
  note = {Useful and peer-reviewed: In-depth look at different concurrency models in Clojure and solid explanation of concepts.}
}

@inproceedings{Ziv2015,
  author = {Ziv, Ofri and Aiken, Alex and Golan-Gueta, Guy and Ramalingam, G. and Sagiv, Mooly},
  title = {Composing Concurrency Control},
  booktitle = {Proceedings of the 36th ACM SIGPLAN Conference on Programming Language Design and Implementation},
  series = {PLDI '15},
  year = {2015},
  isbn = {978-1-4503-3468-6},
  location = {Portland, OR, USA},
  pages = {240--249},
  numpages = {10},
  url = {http://doi.acm.org/10.1145/2737924.2737970},
  doi = {10.1145/2737924.2737970},
  acmid = {2737970},
  publisher = {ACM},
  address = {New York, NY, USA},
  keywords = {composable concurrency},
  note = {Useful and peer reviewed: Formalizes desired requirements for a concurrency model (deadlock and abort safety, opacity) and demonstrates protocols that satisfy the requirements and can be combined. Notably, applies this theory of correctness to validate the combination of optimistic and pessimistic concurrency control. Offers a rich selection of related work.},
}
